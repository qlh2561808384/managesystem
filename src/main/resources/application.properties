#数据库配置
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.url=jdbc:mysql://localhost:3306/sshproject?useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#mybatis配置
#mybatis mapper-locations作用
##application上配置了@MapperScan(扫面mapper类的路径)和pom.xml中放行了mapper.xml后，配置mapper-locations没有意义
##查找后得知，如果mapper类和mapper.xml不在同一个路径下时，mapper-locations就有用了，在pom.xml中配置
##mybatis.mapper-locations=classpath*:com/example/demo/mapper/*.xml
##用mapper-locations指定mapper.xml的路径，实验成功
mybatis.mapper-locations=classpath:MapperXML/*.xml
#mapper.xml中的resultType中经常会用到一些自定义POJO，你可以用完全限定名来指定这些POJO的引用，例如
#<select id="getUsers" resultType="com.majing.learning.mybatis.entity.User">，
#又或者你可以通过在application.properties中指定POJO扫描包来让mybatis自动扫描到自定义POJO，如下：
#mybatis.type-aliases-package=com.majing.learning.mybatis.entity
#但是，请千万注意，不要再mybatis.type-aliases-package=后面接classpath这个单词，否则，mybatis会找不到POJO。
mybatis.type-aliases-package=com.longgroup.managesystem.domain

#同页面的加载顺序classpath:/templates/这是我新加的，后面还可以加
#spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,classpath:/templates/
#spring boot在springmvc的视图解析器方面就默认集成了ContentNegotiatingViewResolver和BeanNameViewResolver，在视图引擎上就已经集成自动配置的模版引擎，如下：?
#1. FreeMarker?
#2. Groovy?
#3. Thymeleaf?
#4. Velocity (deprecated in 1.4)?
#6. Mustache
#spring.thymeleaf.mode=HTML
#spring.thymeleaf.prefix=/templates/
#spring.thymeleaf.suffix=.html
#端口号设置
server.port=20000
#日志配置
logging.level.com.xiaolyuh=debug
logging.level.org.springframework.web=debug
logging.level.org.springframework.transaction=debug
logging.level.org.mybatis=debug

#操作数据库的时候实体类的属性要是大小写的话 会默认解析驼峰样式成数据库字段
#mybatis.configuration.map-underscore-to-camel-case=false

#相对路径 开头请勿添加斜杠
spring.messages.basename= static/i18n/messages
#上传文件地址
upload.path = g:\\uploadFile
#linux下面的
#upload.path = /root/upload

#注意：必需要开启置为true。如果是想要不限制文件上传的大小，那么就把两个值都设置为-1
#默认支持文件上传.
spring.servlet.multipart.enabled =true
#支持文件写入磁盘.
spring.servlet.multipart.file-size-threshold =0
# 最大支持文件大小
spring.servlet.multipart.max-file-size=-1
# 最大支持请求大小
spring.servlet.multipart.max-request-size=-1
